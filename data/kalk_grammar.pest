document = {soi ~ (statement ~ (newline+ | &eoi))* ~ eoi}

// Statements

statement = _{assignment_stm | expression_stm | condition_stm}

assignment_stm = {identifier ~ &":=" ~ operator ~ expression}
expression_stm = {expression}
condition_stm = {condition}

// Expressions

expression = _{sum_expr | prod_expr | negate_expr | exp_expr | atomic_expr}

sum_expr = {
    (prod_expr | negate_expr | exp_expr | atomic_expr)
    ~ (&("+" | "-") ~ operator ~ (prod_expr | exp_expr | atomic_expr))+
}

prod_expr = {
    (negate_expr | exp_expr | atomic_expr) ~ (
        &("*" | "/") ~ operator ~ (negate_expr | exp_expr | atomic_expr)
        | (exp_expr | atomic_expr)
    )+
}

negate_expr = {
    "-" ~ (exp_expr | atomic_expr)
}

exp_expr = {
    atomic_expr ~ 
    (&"^" ~ operator ~ (negate_expr | exp_expr | atomic_expr))+
}

atomic_expr = _{"(" ~ expression ~ ")" | identifier | literal}

// Conditions

condition = _{or_cond | and_cond | compare_cond | not_cond | atomic_cond}

or_cond = {
    (and_cond | compare_cond | not_cond | atomic_cond)
    ~ (&"||" ~ operator ~ (and_cond | compare_cond | not_cond | atomic_cond))+
}

and_cond = {
    (compare_cond | not_cond | atomic_cond)
    ~ (&"&&" ~ operator ~ (compare_cond | not_cond | atomic_cond))+
}

compare_cond = {
    expression
    ~ (&compare_op ~ operator ~ expression)+
}

not_cond = {&"!" ~ operator ~ atomic_cond}

atomic_cond = _{"(" ~ condition ~ ")"}

// Operators

operator = {compare_op | logical_op | arithm_op | ":=" | "#"}
compare_op = _{"=" | "!=" | "<" | ">" | "<=" | ">="}
logical_op = _{"!" | "&&" | "||"}
arithm_op = _{"+" | "-" | "*" | "/" | "^"}

// Literals

identifier = @{alpha ~ (alpha | digit | "_")*}
literal = _{number_lit | matrix_lit}
number_lit = @{digit+ ~ ("." ~ digit+)?}
matrix_lit = {"[" ~ (matrix_row_lit ~ (";" | &"]"))* ~ "]"}
matrix_row_lit = {(expression ~ ",")* ~ expression ~ &(";" | "]")}

// Basics

digit = _{'0'..'9'}
alpha = _{'a'..'z' | 'A'..'Z'}
comment = _{"--" ~ (!newline ~ any)*}
newline = _{"\r\n" | "\n\r" | "\n" | "\r"}
whitespace = _{" " | "\t"}
